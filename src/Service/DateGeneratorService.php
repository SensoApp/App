<?php
/**
 * Created by PhpStorm.
 * User: MacBookAir
 * Date: 2019-07-09
 * Time: 20:59
 */

namespace App\Service;

class DateGeneratorService
{

    /**
     * @param null $month
     * @param bool $prevmonth
     * @param bool $nextmonth
     * @return array
     *
     * Generates full month with days depdending on param received
     */
    public function dateGenerator($month = null, bool $prevmonth = false, bool $nextmonth = false) : array
    {
        //en fonction du mois passé, genere tous les jours du mois et la date associé

        for($i = 1; $i <= 31; $i++){

            $monthrequested = date('m', $month);

            if($prevmonth){

                $monthrequested = (int) $monthrequested;

                $monthrequested -= 1;

            } elseif ($nextmonth){

                $monthrequested = (int) $monthrequested;

                $monthrequested += 1;

            }

            $year = date('Y', $month);

           $time =  mktime(12, 0,0, $monthrequested, $i, $year);
            if(date('m',$time) ==$monthrequested){
                $list[] = date('d-M-Y', $time);
            }
        }
        return $list;

    }

    /**
     * @param $month
     * @param null $prevOrNext
     * @return array
     *
     * service to return the dates requested and generated by dateGenerator method
     */
    public function periodRequest($month, $prevOrNext = null) : array
    {
        if($prevOrNext ==="prev=prev"){


            return self::dateGenerator($month, true);

        } elseif ($prevOrNext ==="next=next"){

            return self::dateGenerator($month, false, true);

        } else {

            return self::dateGenerator($month);

        }
    }

}